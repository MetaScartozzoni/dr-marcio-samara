// üß™ Teste da fun√ß√£o date-utils
// Script simples para testar a conectividade e funcionalidades b√°sicas

async function testarDateUtils() {
  console.log('üß™ Iniciando teste da fun√ß√£o date-utils...\n');

  try {
    // Teste 1: Formata√ß√£o b√°sica
    console.log('1. Testando formata√ß√£o b√°sica...');
    const dataTeste = new Date().toISOString();
    const resultadoFormatacao = await window.DateUtilsClient.format(dataTeste, 'DD/MM/YYYY');
    console.log('‚úÖ Formata√ß√£o:', resultadoFormatacao);

    // Teste 2: Valida√ß√£o de data
    console.log('2. Testando valida√ß√£o de data...');
    const resultadoValidacao = await window.DateUtilsClient.isValid('2024-08-27');
    console.log('‚úÖ Valida√ß√£o:', resultadoValidacao);

    // Teste 3: C√°lculo de idade
    console.log('3. Testando c√°lculo de idade...');
    const resultadoIdade = await window.DateUtilsClient.age('1990-05-15');
    console.log('‚úÖ Idade:', resultadoIdade.age, 'anos');

    // Teste 4: Hor√°rio comercial
    console.log('4. Testando hor√°rio comercial...');
    const resultadoHorario = await window.DateUtilsClient.workingHours();
    console.log('‚úÖ Hor√°rio comercial:', resultadoHorario.isWorking ? 'Aberto' : 'Fechado');

    console.log('\nüéâ Todos os testes passaram! A fun√ß√£o date-utils est√° funcionando corretamente.');

  } catch (error) {
    console.error('‚ùå Erro no teste:', error);
    console.log('\nüîß Verifique:');
    console.log('1. Se a fun√ß√£o foi implantada no Supabase');
    console.log('2. Se a URL est√° correta no config.js');
    console.log('3. Se h√° conectividade com o Supabase');
  }
}

// Executar teste automaticamente se estiver em ambiente de desenvolvimento
if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
  // Pequeno delay para garantir que tudo esteja carregado
  setTimeout(() => {
    testarDateUtils();
  }, 1000);
}

// Exportar fun√ß√£o para uso manual
window.testarDateUtils = testarDateUtils;
