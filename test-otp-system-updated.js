// test-otp-system-updated.js
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.REACT_APP_SUPABASE_URL;
const supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY;

console.log('üî¢ TESTE DO SISTEMA OTP (ATUALIZADO)');
console.log('=====================================');

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå ERRO: Vari√°veis de ambiente n√£o encontradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  }
});

async function testOtpSystem() {
  try {
    console.log('üîç Testando sistema de c√≥digo OTP...\n');

    // Teste 1: Verificar configura√ß√£o
    console.log('1Ô∏è‚É£  Verificando configura√ß√£o de autentica√ß√£o...');
    const { error: authError } = await supabase.auth.getSession();

    if (authError) {
      console.error('‚ùå Erro na configura√ß√£o de auth:', authError.message);
    } else {
      console.log('‚úÖ Configura√ß√£o de auth OK');
    }

    // Teste 2: Simular registro + reenvio de c√≥digo
    console.log('\n2Ô∏è‚É£  Testando fluxo completo (registro + c√≥digo)...');
    const testEmail = `test-flow-${Date.now()}@example.com`;
    const testPassword = 'TestPassword123!';

    console.log(`üìß Registrando usu√°rio: ${testEmail}`);

    try {
      // Primeiro registrar o usu√°rio
      const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
        email: testEmail,
        password: testPassword,
        options: {
          data: {
            nome_completo: 'Usu√°rio Teste',
            tipo_usuario: 'paciente'
          }
        },
      });

      if (signUpError) {
        console.error('‚ùå Erro no registro:', signUpError.message);
        return;
      }

      console.log('‚úÖ Usu√°rio registrado com sucesso!');
      console.log(`üë§ User ID: ${signUpData.user?.id}`);

      // Aguardar um pouco antes de tentar reenviar
      console.log('‚è≥ Aguardando 3 segundos...');
      await new Promise(resolve => setTimeout(resolve, 3000));

      // Agora tentar reenviar c√≥digo de verifica√ß√£o
      console.log('üî¢ Enviando c√≥digo de verifica√ß√£o...');

      const { error: resendError } = await supabase.auth.resend({
        type: 'signup',
        email: testEmail,
      });

      if (resendError) {
        console.error('‚ùå Erro ao enviar c√≥digo:', resendError.message);

        if (resendError.message.includes('rate limit')) {
          console.log('üö® RATE LIMITING: Muitos emails enviados recentemente');
        } else if (resendError.message.includes('not found')) {
          console.log('üö® USU√ÅRIO N√ÉO ENCONTRADO: Email pode n√£o existir');
        }
      } else {
        console.log('‚úÖ C√≥digo de verifica√ß√£o enviado!');
        console.log('üìß Verifique sua caixa de entrada');
        console.log('üî¢ Procure por um c√≥digo de 6 d√≠gitos');
      }

    } catch (error) {
      console.error('‚ùå Erro inesperado:', error.message);
    }

    console.log('\nüéØ RESULTADO DO TESTE:');
    console.log('=======================');

    console.log('\n‚úÖ SISTEMA OTP ATUALIZADO:');
    console.log('‚Ä¢ M√©todo sendVerificationCode() usa resend()');
    console.log('‚Ä¢ M√©todo verifyOtpCode() usa type "signup"');
    console.log('‚Ä¢ P√°gina /verify-code com interface completa');
    console.log('‚Ä¢ Integra√ß√£o com fluxo de registro');

    console.log('\nüöÄ COMO FUNCIONA AGORA:');
    console.log('========================');
    console.log('1. Usu√°rio se registra normalmente');
    console.log('2. Sistema cria conta (usu√°rio pode fazer login)');
    console.log('3. Redireciona para /verify-code');
    console.log('4. Envia c√≥digo via resend() method');
    console.log('5. Usu√°rio digita c√≥digo de 6 d√≠gitos');
    console.log('6. Email verificado com sucesso');

    console.log('\nüì± FUNCIONALIDADES:');
    console.log('===================');
    console.log('‚Ä¢ Interface de 6 d√≠gitos com formata√ß√£o');
    console.log('‚Ä¢ Valida√ß√£o autom√°tica');
    console.log('‚Ä¢ Countdown de 60s para reenvio');
    console.log('‚Ä¢ Mensagens de erro espec√≠ficas');
    console.log('‚Ä¢ Alternativa ao link tradicional');

    console.log('\nüîß VANTAGENS:');
    console.log('==============');
    console.log('‚Ä¢ Mais est√°vel que links');
    console.log('‚Ä¢ N√£o depende de redirecionamento');
    console.log('‚Ä¢ Reenvio mais f√°cil');
    console.log('‚Ä¢ Melhor experi√™ncia mobile');

    console.log('\nüéâ SISTEMA PRONTO!');
    console.log('===================');
    console.log('O sistema OTP est√° atualizado e compat√≠vel com sua configura√ß√£o do Supabase!');

  } catch (error) {
    console.error('‚ùå ERRO inesperado:', error.message);
  }
}

testOtpSystem();
