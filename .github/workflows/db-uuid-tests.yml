name: Database UUID Tests

on:
  push:
    branches: [ main, develop, copilot/standardize-uuid-primary-keys ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Jest (if not already installed)
        run: npm install --save-dev jest

      - name: Setup database
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGDATABASE: test_db
          PGUSER: test_user
          PGPASSWORD: test_password
        run: |
          # Install PostgreSQL client
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          
          # Enable uuid-ossp extension
          PGPASSWORD=test_password psql -h localhost -U test_user -d test_db -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"
          
          # Run initialization (create tables)
          node -e "
          const { Pool } = require('pg');
          const { initializeDatabase } = require('./src/config/database');
          
          const pool = new Pool({
            host: 'localhost',
            port: 5432,
            database: 'test_db',
            user: 'test_user',
            password: 'test_password'
          });
          
          (async () => {
            try {
              // Replace the pool in the database module
              const db = require('./src/config/database');
              db.pool = pool;
              
              await initializeDatabase();
              console.log('Database initialized successfully');
              await pool.end();
            } catch (err) {
              console.error('Error initializing database:', err);
              process.exit(1);
            }
          })();
          "

      - name: Run UUID tests
        env:
          TEST_DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
        run: npm test -- tests/db-uuid-setup.test.js --passWithNoTests

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          retention-days: 7
