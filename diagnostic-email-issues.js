// diagnostic-email-issues.js
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.REACT_APP_SUPABASE_URL;
const supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY;

console.log('üîç DIAGN√ìSTICO DE PROBLEMAS DE EMAIL');
console.log('=====================================');

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå ERRO: Vari√°veis de ambiente n√£o encontradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  }
});

async function testEmailSystem() {
  try {
    console.log('üîç Testando sistema de email...\n');

    // Teste 1: Verificar configura√ß√£o de email
    console.log('1Ô∏è‚É£  Verificando configura√ß√£o de autentica√ß√£o...');
    const { error: authError } = await supabase.auth.getSession();

    if (authError) {
      console.error('‚ùå Erro na configura√ß√£o de auth:', authError.message);
    } else {
      console.log('‚úÖ Configura√ß√£o de auth OK');
    }

    // Teste 2: Tentar registrar um usu√°rio de teste
    console.log('\n2Ô∏è‚É£  Testando registro de usu√°rio...');
    const testEmail = `test-${Date.now()}@example.com`;
    const testPassword = 'testpassword123';

    console.log(`üìß Tentando registrar: ${testEmail}`);

    const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword,
      options: {
        redirectTo: 'http://localhost:3000/email-confirmation'
      }
    });

    if (signUpError) {
      console.error('‚ùå Erro no registro:', signUpError.message);

      // Verificar se √© rate limiting
      if (signUpError.message.includes('rate limit') || signUpError.message.includes('too many')) {
        console.log('\nüö® POSS√çVEL CAUSA: Rate Limiting');
        console.log('O Supabase est√° bloqueando emails devido a muitos envios.');
        console.log('\nüîß SOLU√á√ïES:');
        console.log('1. Aguarde 15-30 minutos antes de tentar novamente');
        console.log('2. Verifique se n√£o h√° muitos registros de teste');
        console.log('3. V√° ao dashboard do Supabase > Authentication > Rate Limits');
        console.log('4. Ajuste as configura√ß√µes de rate limit se necess√°rio');
      }

      if (signUpError.message.includes('SMTP') || signUpError.message.includes('email')) {
        console.log('\nüö® POSS√çVEL CAUSA: Problema de SMTP');
        console.log('Configura√ß√£o de email no Supabase pode estar com problema.');
        console.log('\nüîß SOLU√á√ïES:');
        console.log('1. V√° ao dashboard do Supabase > Authentication > Settings');
        console.log('2. Verifique as configura√ß√µes de SMTP');
        console.log('3. Teste com um provedor de email diferente');
      }

    } else {
      console.log('‚úÖ Registro realizado com sucesso!');
      console.log(`üìß Email enviado para: ${testEmail}`);
      console.log(`üë§ User ID: ${signUpData.user?.id}`);
      console.log(`üìß Email confirmado: ${signUpData.user?.email_confirmed_at ? 'Sim' : 'N√£o'}`);

      if (signUpData.user && !signUpData.user.email_confirmed_at) {
        console.log('\nüìß Email de confirma√ß√£o enviado!');
        console.log('Verifique sua caixa de entrada e spam.');
      }
    }

    // Teste 3: Verificar se h√° usu√°rios existentes
    console.log('\n3Ô∏è‚É£  Verificando usu√°rios existentes...');
    const { data: users, error: usersError } = await supabase
      .from('usuarios')
      .select('email, created_at')
      .order('created_at', { ascending: false })
      .limit(5);

    if (usersError) {
      console.log('‚ö†Ô∏è  N√£o foi poss√≠vel verificar usu√°rios (pode ser normal)');
    } else if (users && users.length > 0) {
      console.log(`‚úÖ Encontrados ${users.length} usu√°rios recentes:`);
      users.forEach((user, index) => {
        console.log(`   ${index + 1}. ${user.email} - ${new Date(user.created_at).toLocaleString()}`);
      });
    } else {
      console.log('‚ÑπÔ∏è  Nenhum usu√°rio encontrado na tabela usuarios');
    }

    console.log('\nüéØ RESUMO E RECOMENDA√á√ïES:');
    console.log('=====================================');

    if (signUpError) {
      if (signUpError.message.includes('rate limit')) {
        console.log('üö® PRINCIPAL PROBLEMA: Rate Limiting do Supabase');
        console.log('üí° SOLU√á√ÉO: Aguarde alguns minutos e tente novamente');
      } else if (signUpError.message.includes('SMTP')) {
        console.log('üö® PRINCIPAL PROBLEMA: Configura√ß√£o de Email');
        console.log('üí° SOLU√á√ÉO: Verifique configura√ß√µes no dashboard do Supabase');
      } else {
        console.log('üö® PROBLEMA: Erro desconhecido no registro');
        console.log('üí° SOLU√á√ÉO: Verifique configura√ß√µes e tente novamente');
      }
    } else {
      console.log('‚úÖ SISTEMA FUNCIONANDO: Emails sendo enviados');
      console.log('üí° Se n√£o recebeu: Verifique spam, aguarde alguns minutos');
    }

    console.log('\nüîß PR√ìXIMOS PASSOS:');
    console.log('1. V√° ao Supabase Dashboard > Authentication > Logs');
    console.log('2. Procure por erros relacionados a email');
    console.log('3. Verifique se h√° rate limiting ativo');
    console.log('4. Teste com um email real diferente');

  } catch (error) {
    console.error('‚ùå ERRO inesperado:', error.message);
  }
}

testEmailSystem();
